<?php
/*
he MVC (Model-View-Controller) pattern is a popular architectural design pattern used in web development to separate concerns and organize code. However, if not implemented securely, it can introduce vulnerabilities, such as View Parameters Exploit. 
This occurs when user input is passed directly to the view without proper validation or sanitization, potentially leading to security issues like Cross-Site Scripting (XSS) or Code Injection.


In the MVC pattern:

Model: Manages data and business logic.

View: Handles presentation and displays data to the user.

Controller: Acts as an intermediary between the Model and View, processing user input and updating the Model or View.

*/
require_once 'Controllers/HomeController.php';
require_once 'Controllers/InvoiceController.php';
require_once 'Controllers/Router.php';
require_once 'View.php';
define('VIEW_PATH',__DIR__.'/views');
try{
    $router= new Router();

$router
    ->register('/',[HomeController::class, 'index'])
    ->register('/invoices',[InvoiceController::class, 'index'])
    ->register('/invoices/create',[InvoiceController::class, 'create']);
echo $router->resolve($_SERVER['REQUEST_URI']);
}catch(RouteNotFoundException $e){
   // header('HTTP/1.1 404 Not Found');
    http_response_code(404);
    echo $e->getMessage();
}
